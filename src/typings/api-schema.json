{
  "schemes": [],
  "swagger": "2.0",
  "info": {
    "description": "",
    "title": "introvert",
    "contact": {},
    "version": "1.0"
  },
  "host": "",
  "basePath": "",
  "paths": {
    "/api/v1/campaigns": {
      "get": {
        "description": "Get my campaigns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "campaigns"
        ],
        "summary": "Get my campaigns",
        "operationId": "v1campaigns",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/campaign.GetMyCampaignsResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/campaigns/": {
      "post": {
        "description": "Create new campaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "campaigns"
        ],
        "summary": "Create new campaign",
        "operationId": "v1campaigns",
        "parameters": [
          {
            "description": "Set up result",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/campaign.CreateCampaignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/campaign.CreateCampaignResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}": {
      "put": {
        "description": "Update the campaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "campaigns"
        ],
        "summary": "Update the campaign",
        "operationId": "v1campaigns{campaign_id}",
        "parameters": [
          {
            "type": "string",
            "description": "Campaign ID",
            "name": "campaign_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Set up result",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/campaign.UpdateCampaignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/campaign.CreateCampaignResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/posts/": {
      "get": {
        "description": "Get posts with 1 linked comment by filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posts"
        ],
        "summary": "Get posts",
        "operationId": "v1posts",
        "parameters": [
          {
            "type": "integer",
            "description": "limit",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "status",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "campaign_id",
            "name": "campaign_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/post.GetPostsResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/posts/{post_id}/comments/{comment_id}/approve": {
      "post": {
        "description": "Approve comment to the post. Move it from \"draft\" to \"pending\"",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posts"
        ],
        "summary": "Approve comment to the post",
        "operationId": "v1posts{post_id}comments{comment_id}approve",
        "responses": {
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/posts/{post_id}/comments/{comment_id}/reject": {
      "post": {
        "description": "...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posts"
        ],
        "summary": "Reject comment to the post",
        "operationId": "v1posts{post_id}comments{comment_id}reject",
        "responses": {
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/posts/{post_id}/comments/{comment_id}/remake": {
      "post": {
        "description": "Will be returned a new comment for this post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posts"
        ],
        "summary": "Remake comment to the post",
        "operationId": "v1posts{post_id}comments{comment_id}remake",
        "parameters": [
          {
            "description": "Set up result",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post.RemakeCommentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/post.RemakeCommentResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/prospects/": {
      "get": {
        "description": "Get prospects by filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "prospects"
        ],
        "summary": "Get prospects",
        "operationId": "v1prospects",
        "parameters": [
          {
            "type": "integer",
            "description": "limit",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "campaign_id",
            "name": "campaign_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/prospect.GetProspectsResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "prospects"
        ],
        "summary": "Create prospect to enrich",
        "operationId": "v1prospects",
        "parameters": [
          {
            "description": "Set up result",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/prospect.CreateProspectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/prospect.CreateProspectResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/prospects/remove": {
      "post": {
        "description": "Remove prospect from the campaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "prospects"
        ],
        "summary": "Remove prospect from the campaign",
        "operationId": "v1prospectsremove",
        "parameters": [
          {
            "description": "Set up result",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/prospect.RemoveFromCampaignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/prospect.CreateProspectResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "description": "Login by email and password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Login",
        "operationId": "v1userslogin",
        "parameters": [
          {
            "description": "Set up login payload",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user.LoginResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/logout": {
      "post": {
        "description": "Logout - delete auth token from cookie",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Logout",
        "operationId": "v1userslogout",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "description": "Get the user by ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get the user",
        "operationId": "v1usersme",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user.GetUserResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/refresh": {
      "post": {
        "description": "Refresh (access + refresh) tokens by refresh token.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Refresh",
        "operationId": "v1usersrefresh",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user.RefreshResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/register": {
      "post": {
        "description": "Register new user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Register new user",
        "operationId": "v1usersregister",
        "parameters": [
          {
            "description": "Set up user",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user.RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user.RegisterResponse"
            }
          },
          "400": {
            "description": ""
          },
          "403": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "campaign.Campaign": {
      "type": "object",
      "properties": {
        "company_context": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "example": "c244150b-6acc-4bdf-8072-caf177d5df3f"
        },
        "is_active": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owner_context": {
          "type": "string"
        }
      }
    },
    "campaign.CreateCampaignRequest": {
      "type": "object",
      "properties": {
        "company_context": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner_context": {
          "type": "string"
        }
      }
    },
    "campaign.CreateCampaignResponse": {
      "type": "object"
    },
    "campaign.GetMyCampaignsResponse": {
      "type": "object",
      "properties": {
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/campaign.Campaign"
          }
        }
      }
    },
    "campaign.UpdateCampaignRequest": {
      "type": "object",
      "properties": {
        "company_context": {
          "type": "string"
        },
        "is_active": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "owner_context": {
          "type": "string"
        }
      }
    },
    "post.Comment": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "post.GetPostsResponse": {
      "type": "object",
      "properties": {
        "posts_with_comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/post.PostWithAuthorAndComment"
          }
        }
      }
    },
    "post.Post": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/post.Prospect"
        },
        "content": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_relevant": {
          "type": "boolean"
        },
        "last_check_ts": {
          "type": "string"
        },
        "last_comment": {
          "type": "string"
        },
        "link_url": {
          "type": "string"
        },
        "published_ts": {
          "type": "string"
        }
      }
    },
    "post.PostWithAuthorAndComment": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/post.Comment"
        },
        "post": {
          "$ref": "#/definitions/post.Post"
        }
      }
    },
    "post.Prospect": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_important": {
          "type": "boolean"
        },
        "link_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "string"
        }
      }
    },
    "post.RemakeCommentRequest": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        }
      }
    },
    "post.RemakeCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/post.Comment"
        }
      }
    },
    "prospect.CreateProspectRequest": {
      "type": "object",
      "properties": {
        "campaign_id": {
          "type": "string"
        },
        "link_urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "prospect.CreateProspectResponse": {
      "type": "object"
    },
    "prospect.GetProspectsResponse": {
      "type": "object",
      "properties": {
        "prospects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/prospect.Prospect"
          }
        }
      }
    },
    "prospect.Prospect": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "campaign_id": {
          "type": "string"
        },
        "comments_count": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_important": {
          "type": "boolean"
        },
        "last_comment_ts": {
          "type": "string"
        },
        "last_post_check_ts": {
          "type": "string"
        },
        "link_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "post_frequency": {
          "type": "integer"
        }
      }
    },
    "prospect.RemoveFromCampaignRequest": {
      "type": "object",
      "properties": {
        "campaign_id": {
          "type": "string"
        },
        "prospect_id": {
          "type": "string"
        }
      }
    },
    "user.GetUserResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "linkedin_account": {
          "$ref": "#/definitions/user.LinkedinAccount"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "user.LinkedinAccount": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "linkedin_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "user.LoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "user.LoginResponse": {
      "type": "object"
    },
    "user.RefreshResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "user.RegisterRequest": {
      "type": "object",
      "required": [
        "email",
        "first_name",
        "password",
        "second_name"
      ],
      "properties": {
        "email": {
          "type": "string",
          "maxLength": 32
        },
        "first_name": {
          "type": "string",
          "maxLength": 32,
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 6
        },
        "second_name": {
          "type": "string",
          "maxLength": 32,
          "minLength": 1
        }
      }
    },
    "user.RegisterResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    }
  }
}